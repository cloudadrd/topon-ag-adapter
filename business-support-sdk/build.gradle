apply plugin: 'com.android.library'

def version = "1.9.8"
android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName version

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        consumerProguardFiles "consumer-rules.pro"

        sourceSets {
            main {
                jni.srcDirs = []
                jniLibs.srcDirs = ['libs']
            }
        }

        ndk {
// 选择实际需要的 cpu 架构
            abiFilters 'armeabi-v7a'//, 'arm64-v8a'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    // java版本
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        doNotStrip "*/arm64-v8a/libdu.so"
        doNotStrip "*/armeabi/libdu.so"
        doNotStrip "*/armeabi-v7a/libdu.so"
        doNotStrip "*/x86/libdu.so"
        doNotStrip "*/x86_64/libdu.so"
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }

}

android.libraryVariants.all { variant ->
    variant.outputs.all {
        if (variant.buildType.name == 'release') {
            outputFileName = "business-support-sdk-${version}.aar"
        }
    }
}

repositories {
    flatDir {
        dirs '../app/libs'
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    compileOnly fileTree(dir: "../app/libs", include: ["*.aar"])
    compileOnly fileTree(dir: "../app/network/gdt/libs", include: ["*.aar"])
    compileOnly fileTree(dir: "../app/network/mintegral/libs", include: ["*.aar"])
    compileOnly fileTree(dir: "../app/network/kuaishou/libs", include: ["*.aar"])
    compileOnly fileTree(dir: "../app/network/pangle/libs", include: ["*.aar"])
    compileOnly fileTree(dir: "../app/network/adsgreat/extra", include: ["*.aar"])
    implementation 'androidx.appcompat:appcompat:1.3.1'

    api 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+'

    implementation 'com.huaweicloud:esdk-obs-android:3.21.4'
    // 三方网络库依赖
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
    implementation 'com.squareup.okio:okio:1.14.0'
//    api project(':socketclient')

//    compileOnly files('libs/GDTSDK.unionNormal.4.391.1261.aar')
//    compileOnly files('libs/smsdk-3.0.6-release.aar')
//    compileOnly files('libs/thinkingsdk-release.aar')
//    compileOnly files('libs/anythink_banner.aar')
//    compileOnly files('libs/anythink_china_core.aar')
//    compileOnly files('libs/anythink_core.aar')
//    compileOnly files('libs/anythink_interstitial.aar')
//    compileOnly files('libs/anythink_native.aar')
//    compileOnly files('libs/anythink_rewardvideo.aar')
//    compileOnly files('libs/anythink_splash.aar')
//    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

}

